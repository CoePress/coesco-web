model User {
  id String @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Employee {
  id String @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Company {
  id String @id @default(uuid())
  name String

  parentId String?
  parent    Company? @relation("CompanyHierarchy", fields: [parentId], references: [id])
  children  Company[] @relation("CompanyHierarchy")

  taxId     String?  @unique
  website   String?
  phone     String?
  email     String?

  addresses Address[]
  deals     Deal[]
  contacts  Contact[]

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("companies")
}

model Address {
  id String @id @default(uuid())

  label       String
  type        AddressType

  street1     String
  street2     String?
  city        String
  state       String?
  postalCode  String
  country     String

  isDefault   Boolean     @default(false)
  isActive    Boolean     @default(true)
  
  companyId   String
  company     Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  dealBillingAddresses  Deal[] @relation("DealBillingAddress")
  dealShippingAddresses Deal[] @relation("DealShippingAddress")
  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  @@map("addresses")
}

model Contact {
  id String @id @default(uuid())
  firstName   String
  lastName    String
  email       String?
  phone       String?
  title       String?

  companyId   String  
  company     Company  @relation(fields: [companyId], references: [id])

  isPrimary   Boolean  @default(false)
  isActive    Boolean  @default(true)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("contacts")
}

model Deal {
  id String @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Quote {
  id String @id @default(uuid())
  number      String      @unique

  dealId      String
  deal        Deal        @relation(fields: [dealId], references: [id])

  billingAddressId   String?
  billingAddress     Address? @relation("QuoteBillingAddress", fields: [billingAddressId], references: [id])
  
  shippingAddressId  String?
  shippingAddress    Address? @relation("QuoteShippingAddress", fields: [shippingAddressId], references: [id])

  status      QuoteStatus @default(DRAFT)
  validUntil  DateTime?
  total       Decimal?

  lineItems   QuoteLineItem[]
  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  @@map("quotes")
}

enum QuoteStatus {
  DRAFT
  APPROVED
  SENT
  REVISED
  ACCEPTED
  REJECTED
  EXPIRED
}

model QuoteLineItem {
  id          String   @id @default(cuid())
  
  quoteId     String
  quote       Quote    @relation(fields: [quoteId], references: [id], onDelete: Cascade)
  
  description String
  quantity    Int      @default(1)
  unitPrice   Decimal
  total       Decimal
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("quote_line_items")
}