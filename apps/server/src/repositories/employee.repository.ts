// This file was generated by generate-services.ts
import type { Employee } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type EmployeeAttributes = Omit<Employee, "id" | "createdAt" | "updatedAt">;

export class EmployeeRepository extends BaseRepository<Employee> {
  protected model = prisma.employee;
  protected entityName = "Employee";
  protected modelName = "employee";

  protected async validate(entity: EmployeeAttributes): Promise<void> {
    if (!entity.userId)
      throw new BadRequestError("userId is required");
    if (!entity.number)
      throw new BadRequestError("number is required");
    if (!entity.firstName)
      throw new BadRequestError("firstName is required");
    if (!entity.lastName)
      throw new BadRequestError("lastName is required");
    if (!entity.initials)
      throw new BadRequestError("initials is required");
    if (!entity.title)
      throw new BadRequestError("title is required");
    if (!entity.isSalaried)
      throw new BadRequestError("isSalaried is required");
    if (!entity.isActive)
      throw new BadRequestError("isActive is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
