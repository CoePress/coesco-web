// This file was generated by generate-services.ts
import { Employee } from "@prisma/client";
import { BaseRepository } from "./_base.repository";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type EmployeeAttributes = Omit<Employee, "id" | "createdAt" | "updatedAt">;

export class EmployeeRepository extends BaseRepository<Employee> {
	protected model = prisma.employee;
	protected entityName = "Employee";
	protected modelName = "employee";

	protected async validate(entity: EmployeeAttributes): Promise<void> {
		if (!entity.userId) throw new BadRequestError("userId is required");
		if (!entity.number) throw new BadRequestError("number is required");
		if (!entity.firstName) throw new BadRequestError("firstName is required");
		if (!entity.lastName) throw new BadRequestError("lastName is required");
		if (!entity.initials) throw new BadRequestError("initials is required");
		if (!entity.title) throw new BadRequestError("title is required");
		if (entity.isSalaried === undefined || entity.isSalaried === null) throw new BadRequestError("isSalaried is required");
		if (entity.isActive === undefined || entity.isActive === null) throw new BadRequestError("isActive is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}

}