// This file was generated by generate-services.ts
import type { Configuration } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type ConfigurationAttributes = Omit<Configuration, "id" | "createdAt" | "updatedAt">;

export class ConfigurationRepository extends BaseRepository<Configuration> {
  protected model = prisma.configuration;
  protected entityName = "Configuration";
  protected modelName = "configuration";

  protected async validate(entity: ConfigurationAttributes): Promise<void> {
    if (!entity.productClassId)
      throw new BadRequestError("productClassId is required");
    if (!entity.name)
      throw new BadRequestError("name is required");
    if (entity.isTemplate === undefined || entity.isTemplate === null)
      throw new BadRequestError("isTemplate is required");
    if (entity.isActive === undefined || entity.isActive === null)
      throw new BadRequestError("isActive is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
