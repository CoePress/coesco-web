// This file was generated by generate-services.ts
import type { QuoteItem } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type QuoteItemAttributes = Omit<QuoteItem, "id" | "createdAt" | "updatedAt">;

export class QuoteItemRepository extends BaseRepository<QuoteItem> {
  protected model = prisma.quoteItem;
  protected entityName = "QuoteItem";
  protected modelName = "quoteItem";

  protected async validate(entity: QuoteItemAttributes): Promise<void> {
    if (!entity.quoteRevisionId)
      throw new BadRequestError("quoteRevisionId is required");
    if (!entity.quantity)
      throw new BadRequestError("quantity is required");
    if (!entity.unitPrice)
      throw new BadRequestError("unitPrice is required");
    if (!entity.lineNumber)
      throw new BadRequestError("lineNumber is required");
    if (!entity.isCustom)
      throw new BadRequestError("isCustom is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
