// This file was generated by generate-services.ts
import type { Contact } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type ContactAttributes = Omit<Contact, "id" | "createdAt" | "updatedAt">;

export class ContactRepository extends BaseRepository<Contact> {
  protected model = prisma.contact;
  protected entityName = "Contact";
  protected modelName = "contact";

  protected getSearchFields() {
    return ["firstName", "lastName", "email", "phone", "title"];
  }

  protected async validate(entity: ContactAttributes): Promise<void> {
    if (!entity.companyId)
      throw new BadRequestError("companyId is required");
    if (!entity.firstName)
      throw new BadRequestError("firstName is required");
    if (entity.isPrimary === undefined || entity.isPrimary === null)
      throw new BadRequestError("isPrimary is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
