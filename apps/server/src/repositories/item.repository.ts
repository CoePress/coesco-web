// This file was generated by generate-services.ts
import type { Item } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type ItemAttributes = Omit<Item, "id" | "createdAt" | "updatedAt">;

export class ItemRepository extends BaseRepository<Item> {
  protected model = prisma.item;
  protected entityName = "Item";
  protected modelName = "item";

  protected async validate(entity: ItemAttributes): Promise<void> {
    if (!entity.specifications)
      throw new BadRequestError("specifications is required");
    if (!entity.unitPrice)
      throw new BadRequestError("unitPrice is required");
    if (!entity.isActive)
      throw new BadRequestError("isActive is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
