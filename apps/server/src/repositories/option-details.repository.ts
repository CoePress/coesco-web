// This file was generated by generate-services.ts
import { OptionDetails } from "@prisma/client";
import { BaseRepository } from "./_base.repository";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type OptionDetailsAttributes = Omit<OptionDetails, "id" | "createdAt" | "updatedAt">;

export class OptionDetailsRepository extends BaseRepository<OptionDetails> {
	protected model = prisma.optionDetails;
	protected entityName = "OptionDetails";
	protected modelName = "optionDetails";

	protected async validate(entity: OptionDetailsAttributes): Promise<void> {
		if (!entity.optionHeaderId) throw new BadRequestError("optionHeaderId is required");
		if (!entity.price) throw new BadRequestError("price is required");
		if (entity.isActive === undefined || entity.isActive === null) throw new BadRequestError("isActive is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}

}