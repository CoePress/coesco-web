// This file was generated by generate-services.ts
import type { OptionHeader } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type OptionHeaderAttributes = Omit<OptionHeader, "id" | "createdAt" | "updatedAt">;

export class OptionHeaderRepository extends BaseRepository<OptionHeader> {
  protected model = prisma.optionHeader;
  protected entityName = "OptionHeader";
  protected modelName = "optionHeader";

  protected async validate(entity: OptionHeaderAttributes): Promise<void> {
    if (!entity.optionCategoryId)
      throw new BadRequestError("optionCategoryId is required");
    if (!entity.name)
      throw new BadRequestError("name is required");
    if (!entity.displayOrder)
      throw new BadRequestError("displayOrder is required");
    if (entity.isActive === undefined || entity.isActive === null)
      throw new BadRequestError("isActive is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
