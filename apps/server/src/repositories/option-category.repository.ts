// This file was generated by generate-services.ts
import type { OptionCategory } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type OptionCategoryAttributes = Omit<OptionCategory, "id" | "createdAt" | "updatedAt">;

export class OptionCategoryRepository extends BaseRepository<OptionCategory> {
  protected model = prisma.optionCategory;
  protected entityName = "OptionCategory";
  protected modelName = "optionCategory";

  protected async validate(entity: OptionCategoryAttributes): Promise<void> {
    if (!entity.name)
      throw new BadRequestError("name is required");
    if (entity.multiple === undefined || entity.multiple === null)
      throw new BadRequestError("multiple is required");
    if (entity.mandatory === undefined || entity.mandatory === null)
      throw new BadRequestError("mandatory is required");
    if (entity.standard === undefined || entity.standard === null)
      throw new BadRequestError("standard is required");
    if (!entity.displayOrder)
      throw new BadRequestError("displayOrder is required");
  }
}
