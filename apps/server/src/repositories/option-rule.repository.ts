// This file was generated by generate-services.ts
import { OptionRule } from "@prisma/client";
import { BaseRepository } from "./_base.repository";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type OptionRuleAttributes = Omit<OptionRule, "id" | "createdAt" | "updatedAt">;

export class OptionRuleRepository extends BaseRepository<OptionRule> {
	protected model = prisma.optionRule;
	protected entityName = "OptionRule";
	protected modelName = "optionRule";

	protected async validate(entity: OptionRuleAttributes): Promise<void> {
		if (!entity.name) throw new BadRequestError("name is required");
		if (!entity.priority) throw new BadRequestError("priority is required");
		if (entity.isActive === undefined || entity.isActive === null) throw new BadRequestError("isActive is required");
		if (!entity.condition) throw new BadRequestError("condition is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}

}