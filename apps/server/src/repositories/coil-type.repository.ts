// This file was generated by generate-services.ts
import type { CoilType } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseRepository } from "./_base.repository";

type CoilTypeAttributes = Omit<CoilType, "id" | "createdAt" | "updatedAt">;

export class CoilTypeRepository extends BaseRepository<CoilType> {
  protected model = prisma.coilType;
  protected entityName = "CoilType";
  protected modelName = "coilType";

  protected async validate(entity: CoilTypeAttributes): Promise<void> {
    if (!entity.multiplier)
      throw new BadRequestError("multiplier is required");
    if (!entity.sortOrder)
      throw new BadRequestError("sortOrder is required");
    if (entity.isArchived === undefined || entity.isArchived === null)
      throw new BadRequestError("isArchived is required");
  }
}
