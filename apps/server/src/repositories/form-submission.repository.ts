// This file was generated by generate-services.ts
import { FormSubmission } from "@prisma/client";
import { BaseRepository } from "./_base.repository";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type FormSubmissionAttributes = Omit<FormSubmission, "id" | "createdAt" | "updatedAt">;

export class FormSubmissionRepository extends BaseRepository<FormSubmission> {
	protected model = prisma.formSubmission;
	protected entityName = "FormSubmission";
	protected modelName = "formSubmission";

	protected async validate(entity: FormSubmissionAttributes): Promise<void> {
		if (!entity.formId) throw new BadRequestError("formId is required");
		if (!entity.answers) throw new BadRequestError("answers is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}

}