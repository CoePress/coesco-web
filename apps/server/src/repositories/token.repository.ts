// This file was generated by generate-services.ts
import { Token } from "@prisma/client";
import { BaseRepository } from "./_base.repository";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type TokenAttributes = Omit<Token, "id" | "createdAt" | "updatedAt">;

export class TokenRepository extends BaseRepository<Token> {
	protected model = prisma.token;
	protected entityName = "Token";
	protected modelName = "token";

	protected async validate(entity: TokenAttributes): Promise<void> {
		if (!entity.userId) throw new BadRequestError("userId is required");
		if (!entity.token) throw new BadRequestError("token is required");
		if (!entity.expiresAt) throw new BadRequestError("expiresAt is required");
		if (entity.used === undefined || entity.used === null) throw new BadRequestError("used is required");
	}

}