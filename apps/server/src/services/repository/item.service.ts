// This file was generated by generate-services.ts on 2025-08-25 15:10:39
import type { Item } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type ItemAttributes = Omit<Item, "id" | "createdAt" | "updatedAt">;

export class ItemService extends BaseService<Item> {
  protected model = prisma.item;
  protected entityName = "Item";
  protected modelName = "item";

  protected async validate(entity: ItemAttributes): Promise<void> {
    if (!entity.name)
      throw new BadRequestError("name is required");
    if (!entity.unitPrice)
      throw new BadRequestError("unitPrice is required");
    if (!entity.type)
      throw new BadRequestError("type is required");
    if (!entity.isActive)
      throw new BadRequestError("isActive is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
