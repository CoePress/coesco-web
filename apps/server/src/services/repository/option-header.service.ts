// This file was generated by generate-services.ts on 2025-09-04 13:21:22
import { OptionHeader } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type OptionHeaderAttributes = Omit<OptionHeader, "id" | "createdAt" | "updatedAt">;

export class OptionHeaderService extends BaseService<OptionHeader> {
	protected model = prisma.optionHeader;
	protected entityName = "OptionHeader";
	protected modelName = "optionHeader";

	protected async validate(entity: OptionHeaderAttributes): Promise<void> {
		if (!entity.optionCategoryId) throw new BadRequestError("optionCategoryId is required");
		if (!entity.name) throw new BadRequestError("name is required");
		if (!entity.displayOrder) throw new BadRequestError("displayOrder is required");
		if (!entity.isActive) throw new BadRequestError("isActive is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}
}