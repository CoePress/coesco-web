// This file was generated by generate-services.ts on 2025-09-02 08:45:51
import { CoilType } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type CoilTypeAttributes = Omit<CoilType, "id" | "createdAt" | "updatedAt">;

export class CoilTypeService extends BaseService<CoilType> {
	protected model = prisma.coilType;
	protected entityName = "CoilType";
	protected modelName = "coilType";

	protected async validate(entity: CoilTypeAttributes): Promise<void> {
		if (!entity.multiplier) throw new BadRequestError("multiplier is required");
		if (!entity.sortOrder) throw new BadRequestError("sortOrder is required");
		if (!entity.isArchived) throw new BadRequestError("isArchived is required");
	}
}