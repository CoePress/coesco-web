// This file was generated by generate-services.ts on 2025-09-02 08:45:50
import { Employee } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type EmployeeAttributes = Omit<Employee, "id" | "createdAt" | "updatedAt">;

export class EmployeeService extends BaseService<Employee> {
	protected model = prisma.employee;
	protected entityName = "Employee";
	protected modelName = "employee";

	protected async validate(entity: EmployeeAttributes): Promise<void> {
		if (!entity.userId) throw new BadRequestError("userId is required");
		if (!entity.number) throw new BadRequestError("number is required");
		if (!entity.firstName) throw new BadRequestError("firstName is required");
		if (!entity.lastName) throw new BadRequestError("lastName is required");
		if (!entity.isActive) throw new BadRequestError("isActive is required");
		if (!entity.jobTitle) throw new BadRequestError("jobTitle is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}
}