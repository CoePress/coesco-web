// This file was generated by generate-services.ts on 2025-07-29 09:53:11
import { Configuration } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type ConfigurationAttributes = Omit<Configuration, "id" | "createdAt" | "updatedAt">;

export class ConfigurationService extends BaseService<Configuration> {
	protected model = prisma.configuration;
	protected entityName = "Configuration";
	protected modelName = "configuration";

	protected async validate(entity: ConfigurationAttributes): Promise<void> {
		if (!entity.productClassId) throw new BadRequestError("productClassId is required");
		if (!entity.name) throw new BadRequestError("name is required");
		if (!entity.isTemplate) throw new BadRequestError("isTemplate is required");
		if (!entity.isActive) throw new BadRequestError("isActive is required");
	}
}
