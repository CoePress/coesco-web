// This file was generated by generate-services.ts on 2025-07-24 14:16:48
import { MachineStatus } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type MachineStatusAttributes = Omit<MachineStatus, "id" | "createdAt" | "updatedAt">;

export class MachineStatusService extends BaseService<MachineStatus> {
	protected model = prisma.machineStatus;
	protected entityName = "MachineStatus";
	protected modelName = "machineStatus";

	protected async validate(entity: MachineStatusAttributes): Promise<void> {
		if (!entity.machineId) throw new BadRequestError("machineId is required");
		if (!entity.execution) throw new BadRequestError("execution is required");
		if (!entity.controller) throw new BadRequestError("controller is required");
		if (!entity.program) throw new BadRequestError("program is required");
		if (!entity.tool) throw new BadRequestError("tool is required");
		if (!entity.metrics) throw new BadRequestError("metrics is required");
		if (!entity.alarmCode) throw new BadRequestError("alarmCode is required");
		if (!entity.alarmMessage) throw new BadRequestError("alarmMessage is required");
		if (!entity.startTime) throw new BadRequestError("startTime is required");
		if (!entity.duration) throw new BadRequestError("duration is required");
		if (!entity.createdById) throw new BadRequestError("createdById is required");
		if (!entity.updatedById) throw new BadRequestError("updatedById is required");
	}
}