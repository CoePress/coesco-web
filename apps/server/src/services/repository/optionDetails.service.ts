// This file was generated by generate-services.ts on 2025-07-17 11:56:23
import { OptionDetails } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type OptionDetailsAttributes = Omit<OptionDetails, "id" | "createdAt" | "updatedAt">;

export class OptionDetailsService extends BaseService<OptionDetails> {
	protected model = prisma.optionDetails;
	protected entityName = "OptionDetails";
	protected modelName = "optionDetails";

	protected async validate(entity: OptionDetailsAttributes): Promise<void> {
		if (!entity.productClassId) throw new BadRequestError("productClassId is required");
		if (!entity.optionHeaderId) throw new BadRequestError("optionHeaderId is required");
		if (!entity.price) throw new BadRequestError("price is required");
		if (!entity.displayOrder) throw new BadRequestError("displayOrder is required");
		if (!entity.isActive) throw new BadRequestError("isActive is required");
		if (!entity.isDefault) throw new BadRequestError("isDefault is required");
	}
}
