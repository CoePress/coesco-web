// This file was generated by generate-services.ts on 2025-08-25 15:10:39
import type { Message } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type MessageAttributes = Omit<Message, "id" | "createdAt" | "updatedAt">;

export class MessageService extends BaseService<Message> {
  protected model = prisma.message;
  protected entityName = "Message";
  protected modelName = "message";

  protected async validate(entity: MessageAttributes): Promise<void> {
    if (!entity.chatId)
      throw new BadRequestError("chatId is required");
    if (!entity.role)
      throw new BadRequestError("role is required");
    if (!entity.content)
      throw new BadRequestError("content is required");
  }
}
