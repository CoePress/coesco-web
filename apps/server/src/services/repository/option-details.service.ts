// This file was generated by generate-services.ts on 2025-09-05 18:23:29
import type { OptionDetails } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type OptionDetailsAttributes = Omit<OptionDetails, "id" | "createdAt" | "updatedAt">;

export class OptionDetailsService extends BaseService<OptionDetails> {
  protected model = prisma.optionDetails;
  protected entityName = "OptionDetails";
  protected modelName = "optionDetails";

  protected async validate(entity: OptionDetailsAttributes): Promise<void> {
    if (!entity.optionHeaderId)
      throw new BadRequestError("optionHeaderId is required");
    if (!entity.price)
      throw new BadRequestError("price is required");
    if (!entity.isActive)
      throw new BadRequestError("isActive is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
