// This file was generated by generate-services.ts
import type { FormField } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type FormFieldAttributes = Omit<FormField, "id" | "createdAt" | "updatedAt">;

export class FormFieldService extends BaseService<FormField> {
  protected model = prisma.formField;
  protected entityName = "FormField";
  protected modelName = "formField";

  protected async validate(entity: FormFieldAttributes): Promise<void> {
    if (!entity.sectionId)
      throw new BadRequestError("sectionId is required");
    if (!entity.fieldType)
      throw new BadRequestError("fieldType is required");
    if (!entity.label)
      throw new BadRequestError("label is required");
    if (!entity.required)
      throw new BadRequestError("required is required");
    if (!entity.orderIndex)
      throw new BadRequestError("orderIndex is required");
  }
}
