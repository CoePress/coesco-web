// This file was generated by generate-services.ts
import type { OptionRule } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type OptionRuleAttributes = Omit<OptionRule, "id" | "createdAt" | "updatedAt">;

export class OptionRuleService extends BaseService<OptionRule> {
  protected model = prisma.optionRule;
  protected entityName = "OptionRule";
  protected modelName = "optionRule";

  protected async validate(entity: OptionRuleAttributes): Promise<void> {
    if (!entity.name)
      throw new BadRequestError("name is required");
    if (!entity.priority)
      throw new BadRequestError("priority is required");
    if (!entity.isActive)
      throw new BadRequestError("isActive is required");
    if (!entity.condition)
      throw new BadRequestError("condition is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
  }
}
