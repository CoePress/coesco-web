// This file was generated by generate-services.ts on 2025-09-02 08:45:50
import { PermissionException } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type PermissionExceptionAttributes = Omit<PermissionException, "id" | "createdAt" | "updatedAt">;

export class PermissionExceptionService extends BaseService<PermissionException> {
	protected model = prisma.permissionException;
	protected entityName = "PermissionException";
	protected modelName = "permissionException";

	protected async validate(entity: PermissionExceptionAttributes): Promise<void> {
		if (!entity.userId) throw new BadRequestError("userId is required");
		if (!entity.permissionId) throw new BadRequestError("permissionId is required");
		if (!entity.scope) throw new BadRequestError("scope is required");
		if (!entity.scopeKey) throw new BadRequestError("scopeKey is required");
	}
}