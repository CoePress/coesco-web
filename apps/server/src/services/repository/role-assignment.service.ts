// This file was generated by generate-services.ts on 2025-09-05 18:23:29
import type { RoleAssignment } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type RoleAssignmentAttributes = Omit<RoleAssignment, "id" | "createdAt" | "updatedAt">;

export class RoleAssignmentService extends BaseService<RoleAssignment> {
  protected model = prisma.roleAssignment;
  protected entityName = "RoleAssignment";
  protected modelName = "roleAssignment";

  protected async validate(entity: RoleAssignmentAttributes): Promise<void> {
    if (!entity.userId)
      throw new BadRequestError("userId is required");
    if (!entity.roleId)
      throw new BadRequestError("roleId is required");
    if (!entity.scope)
      throw new BadRequestError("scope is required");
    if (!entity.scopeKey)
      throw new BadRequestError("scopeKey is required");
  }
}
