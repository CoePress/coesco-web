// This file was generated by generate-services.ts on 2025-08-26 14:00:06
import { RoleAssignment } from "@prisma/client";
import { BaseService } from "./_base.service";
import { prisma } from "@/utils/prisma";
import { BadRequestError } from "@/middleware/error.middleware";

type RoleAssignmentAttributes = Omit<RoleAssignment, "id" | "createdAt" | "updatedAt">;

export class RoleAssignmentService extends BaseService<RoleAssignment> {
	protected model = prisma.roleAssignment;
	protected entityName = "RoleAssignment";
	protected modelName = "roleAssignment";

	protected async validate(entity: RoleAssignmentAttributes): Promise<void> {
		if (!entity.userId) throw new BadRequestError("userId is required");
		if (!entity.roleId) throw new BadRequestError("roleId is required");
		if (!entity.scope) throw new BadRequestError("scope is required");
		if (!entity.scopeKey) throw new BadRequestError("scopeKey is required");
	}
}