// This file was generated by generate-services.ts on 2025-09-05 18:23:29
import type { QuoteHeader } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type QuoteHeaderAttributes = Omit<QuoteHeader, "id" | "createdAt" | "updatedAt">;

export class QuoteHeaderService extends BaseService<QuoteHeader> {
  protected model = prisma.quoteHeader;
  protected entityName = "QuoteHeader";
  protected modelName = "quoteHeader";

  protected async validate(entity: QuoteHeaderAttributes): Promise<void> {
    if (!entity.year)
      throw new BadRequestError("year is required");
    if (!entity.number)
      throw new BadRequestError("number is required");
    if (!entity.priority)
      throw new BadRequestError("priority is required");
    if (!entity.confidence)
      throw new BadRequestError("confidence is required");
    if (!entity.createdById)
      throw new BadRequestError("createdById is required");
    if (!entity.updatedById)
      throw new BadRequestError("updatedById is required");
    if (!entity.legacy)
      throw new BadRequestError("legacy is required");
  }
}
