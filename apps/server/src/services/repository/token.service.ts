// This file was generated by generate-services.ts
import type { Token } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type TokenAttributes = Omit<Token, "id" | "createdAt" | "updatedAt">;

export class TokenService extends BaseService<Token> {
  protected model = prisma.token;
  protected entityName = "Token";
  protected modelName = "token";

  protected async validate(entity: TokenAttributes): Promise<void> {
    if (!entity.userId)
      throw new BadRequestError("userId is required");
    if (!entity.token)
      throw new BadRequestError("token is required");
    if (!entity.expiresAt)
      throw new BadRequestError("expiresAt is required");
    if (!entity.used)
      throw new BadRequestError("used is required");
  }
}
