// This file was generated by generate-services.ts on 2025-09-05 18:23:29
import type { OptionCategory } from "@prisma/client";

import { BadRequestError } from "@/middleware/error.middleware";
import { prisma } from "@/utils/prisma";

import { BaseService } from "./_base.service";

type OptionCategoryAttributes = Omit<OptionCategory, "id" | "createdAt" | "updatedAt">;

export class OptionCategoryService extends BaseService<OptionCategory> {
  protected model = prisma.optionCategory;
  protected entityName = "OptionCategory";
  protected modelName = "optionCategory";

  protected async validate(entity: OptionCategoryAttributes): Promise<void> {
    if (!entity.name)
      throw new BadRequestError("name is required");
    if (!entity.multiple)
      throw new BadRequestError("multiple is required");
    if (!entity.mandatory)
      throw new BadRequestError("mandatory is required");
    if (!entity.standard)
      throw new BadRequestError("standard is required");
    if (!entity.displayOrder)
      throw new BadRequestError("displayOrder is required");
  }
}
