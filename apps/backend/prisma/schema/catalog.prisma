model ProductClass {
  id          String    @id @default(uuid())
  code        String    @unique
  name        String
  description String?
  parentId    String?
  depth       Int       @default(0)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  createdById String
  updatedById String

  parent                       ProductClass?                @relation("ProductClassHierarchy", fields: [parentId], references: [id])
  children                     ProductClass[]               @relation("ProductClassHierarchy")
  optionDetails                OptionDetails[]
  configurations               Configuration[]
  productClassOptionCategories ProductClassOptionCategory[]

  @@index([createdById])
  @@map("product_classes")
}

model OptionCategory {
  id            String    @id @default(uuid())
  name          String    @unique
  description   String?
  allowMultiple Boolean   @default(false)
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  createdById   String
  updatedById   String

  optionHeaders                OptionHeader[]
  productClassOptionCategories ProductClassOptionCategory[]

  @@index([createdById])
  @@map("option_categories")
}

model ProductClassOptionCategory {
  productClassId   String
  optionCategoryId String
  displayOrder     Int       @default(0)
  isRequired       Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?
  createdById      String
  updatedById      String

  productClass   ProductClass   @relation(fields: [productClassId], references: [id], onDelete: Cascade)
  optionCategory OptionCategory @relation(fields: [optionCategoryId], references: [id], onDelete: Cascade)

  @@id([productClassId, optionCategoryId])
  @@index([createdById])
  @@map("product_class_option_categories")
}

model OptionHeader {
  id          String    @id @default(uuid())
  categoryId  String
  name        String
  code        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  createdById String
  updatedById String

  category             OptionCategory        @relation(fields: [categoryId], references: [id])
  optionDetails        OptionDetails[]
  optionRuleTargets    OptionRuleTarget[]
  optionRuleTriggers   OptionRuleTrigger[]
  configurationOptions ConfigurationOption[]

  @@index([createdById])
  @@map("option_headers")
}

model OptionDetails {
  id             String    @id @default(uuid())
  productClassId String
  optionHeaderId String
  price          Decimal
  displayOrder   Int       @default(0)
  isActive       Boolean   @default(true)
  isDefault      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
  createdById    String
  updatedById    String

  productClass ProductClass @relation(fields: [productClassId], references: [id])
  optionHeader OptionHeader @relation(fields: [optionHeaderId], references: [id])

  @@unique([productClassId, optionHeaderId])
  @@index([createdById])
  @@map("option_details")
}

model OptionRule {
  id          String           @id @default(uuid())
  name        String
  description String?
  action      OptionRuleAction
  priority    Int              @default(0)
  isActive    Boolean          @default(true)
  condition   Json
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  deletedAt   DateTime?
  createdById String
  updatedById String

  targetOptions  OptionRuleTarget[]
  triggerOptions OptionRuleTrigger[]

  @@index([createdById])
  @@map("option_rules")
}

model OptionRuleTarget {
  ruleId      String
  optionId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  createdById String
  updatedById String

  rule   OptionRule   @relation(fields: [ruleId], references: [id])
  option OptionHeader @relation(fields: [optionId], references: [id])

  @@id([ruleId, optionId])
  @@index([createdById])
  @@map("option_rule_targets")
}

model OptionRuleTrigger {
  ruleId      String
  optionId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  createdById String
  updatedById String

  rule   OptionRule   @relation(fields: [ruleId], references: [id])
  option OptionHeader @relation(fields: [optionId], references: [id])

  @@id([ruleId, optionId])
  @@index([createdById])
  @@map("option_rule_triggers")
}

model Configuration {
  id             String    @id @default(uuid())
  productClassId String
  name           String
  description    String?
  isTemplate     Boolean
  isActive       Boolean
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
  createdById    String
  updatedById    String

  productClass    ProductClass          @relation(fields: [productClassId], references: [id])
  selectedOptions ConfigurationOption[]
  quoteItems      QuoteItem[]

  @@index([createdById])
  @@map("configurations")
}

model ConfigurationOption {
  configurationId String
  optionId        String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  createdById     String
  updatedById     String

  configuration Configuration @relation(fields: [configurationId], references: [id])
  option        OptionHeader  @relation(fields: [optionId], references: [id])

  @@id([configurationId, optionId])
  @@index([createdById])
  @@map("configuration_options")
}

model Item {
  id          String    @id @default(uuid())
  name        String
  description String?
  unitPrice   Float     @default(0)
  type        String
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  createdById String
  updatedById String

  quoteItems QuoteItem[]

  @@index([createdById])
  @@map("items")
}